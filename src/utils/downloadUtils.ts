
import { type Recipe } from '../data/recipeData';

export function downloadRecipeAsText(recipe: Recipe): void {
  const content = formatRecipeAsText(recipe);
  
  const blob = new Blob([content], { type: 'text/plain;charset=utf-8' });
  const url = URL.createObjectURL(blob);
  
  const link = document.createElement('a');
  link.href = url;
  link.download = `${recipe.title.replace(/[^a-z0-9]/gi, '_').toLowerCase()}_recipe.txt`;
  document.body.appendChild(link);
  link.click();
  document.body.removeChild(link);
  
  URL.revokeObjectURL(url);
}

function formatRecipeAsText(recipe: Recipe): string {
  return `
TASTEIFY RECIPE
===============

Recipe: ${recipe.title}
Cooking Time: ${recipe.cookingTime}
Servings: ${recipe.servings}

DESCRIPTION
-----------
${recipe.description}

INGREDIENTS
-----------
${recipe.ingredients.map(ingredient => `â€¢ ${ingredient}`).join('\n')}

INSTRUCTIONS
------------
${recipe.instructions.map((step, index) => `${index + 1}. ${step}`).join('\n\n')}

---
Generated by Tasteify - Smart Recipe Assistant
Privacy-first recipe discovery powered by GraphRAG
  `.trim();
}
